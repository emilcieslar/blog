{"__v":0,"_id":{"$oid":"561cf515d293d4d2177e20d5"},"body":"\u003cp\u003eTento článek pojednává o instalaci NodeJS na vlastním Virtual Private Serveru (VPS). Pokud nevíte, co NodeJS je, můžete si přečíst proč se vůbec o NodeJS zajímat na \u003ca href=\\\"http://weblog.ronnieweb.net/2012/01/proc-nodejs/\\\"\u003etomto odkazu\u003c/a\u003e. Pokud chcete NodeJS pouze nainstalovat na svém vlastním počítači a vyzkoušet ho lokálně, přečtěte si článek \u003ca href=\"/post/instalace-nodejs-na-localhostu\"\u003eJak nainstalovat NodeJS\u003c/a\u003e. V případě, že vás zajímá jak si zařídit VPS a kolik takový VPS stojí, v článku \u003ca href=\\\"http://weblog.ronnieweb.net/2012/01/proc-nodejs/\\\"\u003eJak na VPS\u003c/a\u003e se dozvíte více.\u003c/p\u003e\r\n\r\n\u003cp\u003eTeď už ale pojďme k věci. NodeJS je ve světě hodně populární, v česku bohužel zatím není moc známý. Z toho i plyne, že hledat český hosting pro NodeJS je bída. Tak například \u003ca href=\\\"https://rosti.cz/cenik/\\\"\u003eRoští\u003c/a\u003e nabízí za 26 korun za měsíc 64MB RAM s 1GB prostorem, což unese velmi jednoduchou NodeJS aplikaci. Je tady ale jiná varianta, malinko složitější \u0026mdash; udržování vlastního VPS. Třeba takový Forpsi VPS vyjde na 25 Kč za měsíc. Za tuto cenu uživatel dostane 1GB RAM + 20GB prostoru, což už je podle mě velmi dobrá nabídka. S DPH vás to vyjde na 360 Kč ročně, což je srovnatelné s cenou jednodoménového hostingu u Wedosu. Na vašem VPS můžete hostovat ale domén (webů) kolik chcete (samozřejmě omezené místem na disku a RAM) a všechno si nastavíte tak, jak chcete vy. NodeJS může dokonce běžet spolu s Apache (LAMP).\u003c/p\u003e\r\n\r\n\u003ch2\u003eÚvod\u003c/h2\u003e\r\n\u003cp\u003eTento návod bude fungovat na VPS Serveru, který má přednainstalovaný Ubuntu Server 14.04. Návod by měl být ale platný pro kterýkoliv unixový server. Ve své podstatě nainstalujeme nejenom NodeJS, ale i Nginx, který nám zajístí proxy. Znamená to, že budeme mít například dvě NodeJS aplikace: app1.cz a app2.cz. Nginx nasměruje po zadání domén do prohlížeče požadavky do správných složek na serveru.\u003c/p\u003e\r\n\r\n\u003ch2\u003eBezpečný nový uživatel\u003c/h2\u003e\r\n\u003cp\u003eNebylo by moc rozumné spouštět web aplikace jako root uživatel, protože v případě napadení hackerem by hacker mohl převzít kontrolu nad celým VPS (a to nechceme). Proto si nejprve vytvoříme bezpečného uživatele, který bude mít sudo privilegia, tudíž bude schopný instalovat různé balíčky jako root. Otevřete si okno terminálu (TODO: Jak na terminál ve Windowsu) a přihlašte se jako root na vaše VPS\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003essh root@ip_adresa_vps\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNyní si vytvoříme nového uživatele se jménem \"web\" a jeho složku. Můžete ho nazvat samozřejmě jakkoliv chcete.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003euseradd -s /bin/bash -m -d /home/web -c \"web\" web\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNastavíme na tomto uživateli heslo.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003epasswd web\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eA nakonec přiřadíme sudo privilegia, abychom mohli používat příkazy jako root.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003eusermod -aG sudo web\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003ePo tomto procesu se odhlásíme a podobně jako s rootem se přihlásíme s novým uživatelem \"web\".\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003essh web@ip_adresa_vps\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003ch2\u003eInstalace NodeJS\u003c/h2\u003e\r\n\r\n\u003cp\u003eNyní si nainstalujeme poslední verzi NodeJS. Nejprve updatujeme všechny balíčky\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003esudo apt-get update\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNásledovně nainstalujeme balíčky, které jsou potřebné pro NodeJS\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003esudo apt-get install -y build-essential openssl libssl-dev pkg-config\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNyní si stáhneme NodeJS z jejich webu a rozbalíme ho. Poté se přesuneme do složky s rozbaleným NodeJS.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003ewget https://nodejs.org/dist/v0.12.5/node-v0.12.5.tar.gz\r\ntar xvf node-v*\r\ncd node-v*\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNakonfigurujeme NodeJS a \"postavíme\", nakonec takto nakonfigurované a postavené NodeJS si nainstalujeme.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003e./configure\r\nmake\r\nsudo make install\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003ch2\u003ePrvní testovací NodeJS aplikace s Expressem\u003c/h2\u003e\r\n\u003cp\u003eVytvořte si v domovském adresáři /home/web/ novou složku \"node-test\". Uvnitř této složky vytvořte soubor node-test.js, který necháte teď prázdný. Pomocí příkazu npm init si vytvořte soubor package.json. Příkaz npm init se vás vyptá na několik informací, nejdůležitější je ale specifikovat startovací soubor (entry  point), který je právě node-test.js. Zbytek můžete nechat jako default. Nakonec ještě nainstalujte Express framework.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003emkdir node-test\r\ncd node-test\r\nnano node-test.js\r\nnpm init\r\n...\r\nnpm install express --save\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNyní máme vše připraveno pro vytvoření rychlé testovací aplikace. Otevřete si soubor node-test, například pomocí editoru nano a vložte následující kód (pozor, v terminalu se nepoužívá ctrl+v ale ctrl+shift+v, ctrl+v totiž stornuje operace).\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"js\"\u003evar express = require('express')\r\nvar app = express()\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Tady běží testovací aplikace')\r\n})\r\n\r\nvar server = app.listen(8080, function (err) {\r\n  if(err)\r\n  \u0009console.log(err)\r\n  else\r\n  \u0009console.log('App is working on port 8080')\r\n})\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNemohli jste si nevšimnout, že tam nejsou žádné středníky. To je krása javascriptu, tam se psát nemusí. Uložte tento soubor a zadejte následující příkaz, který aplikaci spustí na portu 8080. Poté stačí pouze zabrouzdat ve vašem prohlížeči na adresu http://ip_vaseho_vps:8080 a vaše aplikace tam už na vás bude čekat. Asi vás napadlo jak spustit několik NodeJS aplikací najednou když musíte zrušit (pomocí ctrl+c) tuto aplikaci, abyste mohli spustit další. Na to je tady pomocník zvaný forever.js. \u003ca href=\"#\"\u003ePřečtěte si jak nainstalovat a nakonfigurovat forever\u003c/a\u003e, aby aplikace běžely opravdu \"forever\".\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"js\"\u003enode node-test.js\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003ch2\u003eVíce NodeJS aplikací na jednom VPS\u003c/h2\u003e\r\n\r\n\u003cp\u003eJak jde vidět, instalace a spuštění NodeJS na VPS není žádná raketová věda. Určitě ale nechceme, abychom prezentovali náš web/webovou aplikaci pomocí ip adresy našeho serveru s portem, to by se asi nikomu nelíbilo. Jistě máte také plány vytvořit více než jednu aplikaci. Proto je tady nginx, který nám pomůže nasměřovat požadavky, např. app1.cz a app2.cz do složek (a portů), kde máme napsané (a běží) naše webové aplikace. O instalaci a nakonfigurování nginxu se \u003ca href=\"#\"\u003edočtete zde\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003eReference\u003c/h2\u003e\r\n\u003col\u003e\r\n\u003cli\u003e\u003ca href=\"http://expressjs.com/starter/hello-world.html\"\u003ehttp://expressjs.com/starter/hello-world.html\u003c/a\u003e\u003c/li\u003e\r\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-use-pm2-to-setup-a-node-js-production-environment-on-an-ubuntu-vps\"\u003ehttps://www.digitalocean.com/community/tutorials/how-to-use-pm2-to-setup-a-node-js-production-environment-on-an-ubuntu-vps\u003c/a\u003e\u003c/li\u003e\r\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-14-04\"\u003ehttps://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-14-04\u003c/a\u003e\u003c/li\u003e\r\n\u003c/ol\u003e","datetime":{"$date":"2015-10-13T12:12:05.064Z"},"name":"Instalace NodeJS na vlastní VPS","nameUrl":"instalace-nodejs-na-vlastni-vps","removed":false,"subheading":"Jak nainstalovat NodeJS na vlastním Virtual Private Serveru.","userId":"Emil Cieslar"}
{"__v":0,"_id":{"$oid":"561d24481daf75bb1d3e9ba7"},"body":"\u003cp\u003eTento článek vysvětluje jak lze NodeJS nainstalovat na vašem počítači a aplikace následně spouštět přes localhost ve vašem prohlížeči. Pokud nevíte, co NodeJS je, můžete si přečíst proč se vůbec o NodeJS zajímat na \u003ca href=\"http://weblog.ronnieweb.net/2012/01/proc-nodejs/\"\u003etomto odkazu\u003c/a\u003e.\u003c/p\u003e\r\n\r\n\u003ch2\u003eÚvod\u003c/h2\u003e\r\n\r\n\u003cp\u003eMožná si říkáte, že NodeJS není pro vás. Je to pro programování webových aplikací a vy chcete klasické Apache + PHP + MySQL, které funguje na kterémkoliv hostingu na internetu. Možná máte pravdu, ale i přesto stojí za to to vyzkoušet. Možná budete překvapení, že i váš jednoduchý web může běžet na NodeJS a pokud byste ho chtěli rozšířit, bude to jednodušší než s PHP. Kupříkladu tento web běží celý na NodeJS a nepoznali byste to. Kdybych ho měl programovat v PHP (a taky jsem to už několikrát dělal), neudělal bych to rychleji než s NodeJS. Pojďme se tedy podívat jak NodeJS nainstalovat u vás na počítači.\u003c/p\u003e\r\n\r\n\u003ch2\u003eInstalace NodeJS na Unixu (OS X nebo Linux)\u003c/h2\u003e\r\n\u003cp\u003eNyní si nainstalujeme poslední verzi NodeJS. Nejprve updatujeme všechny balíčky\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003esudo apt-get update\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNásledovně nainstalujeme balíčky, které jsou potřebné pro NodeJS\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003esudo apt-get install -y build-essential openssl libssl-dev pkg-config\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNyní si stáhneme NodeJS z jejich webu a rozbalíme ho. Poté se přesuneme do složky s rozbaleným NodeJS.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003ewget https://nodejs.org/dist/v0.12.5/node-v0.12.5.tar.gz\r\ntar xvf node-v*\r\ncd node-v*\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNakonfigurujeme NodeJS a \"postavíme\", nakonec takto nakonfigurované a postavené NodeJS si nainstalujeme.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003e./configure\r\nmake\r\nsudo make install\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003ch2\u003eInstalace NodeJS na Windowsu\u003c/h2\u003e\r\n\r\n\u003cp\u003eZ následujícího odkazu si stáhněte instalační soubor pro vaši verzi Windowsu \u003ca href=\"https://nodejs.org/en/download/\"\u003ehttps://nodejs.org/en/download/\u003c/a\u003e a nainstalujte ho. To je v podsatě vše. Samozřejmě pro spouštění aplikací by bylo mít ideálně nainstalovaný \u003ca href=\"https://cygwin.com/install.html\"\u003eCygwin\u003c/a\u003e, který simuluje unixový terminál.\u003c/p\u003e\r\n\r\n\u003ch2\u003ePrvní testovací NodeJS aplikace s Expressem\u003c/h2\u003e\r\n\u003cp\u003eVytvořte si kdekoliv v počítači novou složku \"node-test\". Uvnitř této složky vytvořte soubor node-test.js, který necháte teď prázdný. Pomocí příkazu npm init si vytvořte soubor package.json. Příkaz npm init se vás vyptá na několik informací, nejdůležitější je ale specifikovat startovací soubor (entry  point), který je právě node-test.js. Zbytek můžete nechat jako default. Nakonec ještě nainstalujte Express framework.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"bash\"\u003emkdir node-test\r\ncd node-test\r\nnano node-test.js\r\nnpm init\r\n...\r\nnpm install express --save\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNyní máme vše připraveno pro vytvoření rychlé testovací aplikace. Otevřete si soubor node-test, například pomocí editoru nano a vložte následující kód (pozor, v terminalu se nepoužívá ctrl+v ale ctrl+shift+v, ctrl+v totiž stornuje operace).\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"js\"\u003evar express = require('express')\r\nvar app = express()\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Tady běží testovací aplikace')\r\n})\r\n\r\nvar server = app.listen(3000, function (err) {\r\n  if(err)\r\n  \u0009console.log(err)\r\n  else\r\n  \u0009console.log('Aplikace běží na portu 3000')\r\n})\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eNemohli jste si nevšimnout, že tam nejsou žádné středníky. To je krása javascriptu, tam se psát nemusí. Uložte tento soubor a zadejte následující příkaz, který aplikaci spustí na portu 3000. Poté stačí pouze zabrouzdat ve vašem prohlížeči na adresu http://localhost:3000 a vaše aplikace tam už na vás bude čekat.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\u003ccode class=\"js\"\u003enode node-test.js\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003ePokud máte dotazy nebo vám něco nefunguje, zabrouzdejte do sekce kontakt a zanechte mi zprávu.\u003c/p\u003e","datetime":{"$date":"2015-10-13T15:33:28.692Z"},"name":"Instalace NodeJS na localhostu","nameUrl":"instalace-nodejs-na-localhostu","removed":false,"subheading":"Jak nainstalovat NodeJS na vašem počítači, aby běžel na localhostu.","userId":"Emil Cieslar"}
